{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "new_ResourceGroup": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "nsgCount": {
            "type": "int",
            "maxValue": 1
        },
        "nicCount": {
            "type": "int",
            "maxValue": 1
        },
        "storageCount": {
            "type": "int"
        },
        "vmCount": {
            "type": "int",
            "maxValue": 1
        },
        "ResourceGroupLocation": {
            "type": "string"
        },
        "shortLocation": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "3 chars. E.g. East US - EU, West US - WU, East US 2 - EU2"
            }
        },
        "Application_Acronym": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "3 chars e.g. nxt (Next Net), ems"
            }
        },
        "Tier_Name": {
            "type": "string",
            "maxLength": 2,
            "metadata": {
                "description": "2 chars E.g. Sanbox (SB), Live (LI) and training (TR)"
            }
        },
        "Environment_Category": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "3 char. E.g.  DEV, QA, UAT and PRD"
            }
        },
        "Role": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "3 chars e.g. Front end (WEB), Storage (STR), Messaging (MSG), Network (NET), General (GEN) etc."
            }
        },
        "Tenant": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "3 chars  Shared (SRD), Tenant Acronym)"
            }
        },
        "Custom": {
            "type": "string",
            "maxLength": 8,
            "metadata": {
                "description": "(Product Specific) Space. 8 chars (OPTIONAL)"
            }
        },
        "virtualNetworkResourceGroup": {
            "type": "string"
        },
        "virtualNetworkName": {
            "type": "string"
        },
        "subnet1Name": {
            "type": "string"
        },
        "AvailabilitySet": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "Select whether the VM should be in AvailabilitySet or not."
            }
        },
        "privateIpAddress": {
            "type": "array"
        },
        "virtualMachineSize": {
            "type": "string"
        },
        "numberOfDataDisks": {
            "type": "int"
        },
        "DataDiskSize": {
            "type": "int"
        },
        "omsWorkspaceResourceGroup": {
            "type": "string"
        },
        "omsWorkspaceName": {
            "type": "string"
        },
        "keyVaultResourceGroupName": {
            "type": "string"
        },
        "keyvaultName": {
            "type": "sring"
        },
        "adminUsername": {
            "type": "string"
        },
        "domainName": {
            "type": "string"
        },
        "DomainUserName": {
            "type": "string"
        },
        "secret_DomainPassword": {
            "type": "securestring"
        },
        "baseUri": {
            "type": "string"
        }
    },
    "variables": {
        "CharactersForvmName": 2,
        "StorageAccountType": "Standard_LRS",
        "vnetID": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('virtualNetworkResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('virtualNetworkName'))]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', parameters('subnet1Name'))]",
        "resourceNames": {
            "availabilitySetName": "[tolower(concat(parameters('Application_Acronym'),'-avset'))]",
            "ResourceGroupName": "[toupper(concat('GAV-',parameters('shortLocation'),'-',parameters('Application_Acronym'),'-',parameters('Tier_Name'),'-',parameters('Environment_Category'),'-',parameters('Role'),'-',parameters('Tenant'),'-','01','-',parameters('Custom')))]",
            "StorageAccountName": "[tolower(concat(parameters('Application_Acronym'),parameters('shortlocation'),parameters('Tier_Name'),parameters('Environment_Category'),'emsstr','00'))]",
            "networkInterfaceName": "[tolower(concat('GAV',parameters('shortLocation'),'-',parameters('Application_Acronym'),'-',parameters('Environment_Category'),'-','nic','-',parameters('Custom'),'-','00'))]",
            "networkSecurityGroupName": "[tolower(concat('GAV',parameters('shortLocation'),'-',parameters('Application_Acronym'),'-',parameters('Environment_Category'),'-','nsg','-',parameters('Custom'),'-','00'))]",
            "virtualmachineName": "[tolower(concat(take(parameters('Application_Acronym'),variables('CharactersForvmName')),first(parameters('Environment_Category')),first(parameters('Role')),parameters('Custom'),'00'))]",
            "osDiskName": "[tolower(concat('gav',parameters('shortLocation'),'-',parameters('Application_Acronym'),'-','dr','-','osd','-','dsk','-',parameters('Role'),'00'))]",
            "dataDiskName": "[tolower(concat('gav',parameters('shortLocation'),'-',parameters('Application_Acronym'),'-','dr','-','dat','-','dsk','-',parameters('Role'),'00'))]"
        },
        "TemplateURLs": {
            "nsgTemplate": "[concat(parameters('baseUri'),'emsManager/master/emsmanagerNSG.json')]",
            "StorageAccountTemplate": "[concat(parameters('baseUri'),'/sharedTemplates/master/StorageAccount.json')]",
            "emsManagerVMTemplate": "[concat(parameters('baseUri'),'/emsManager/master/emsManagerVM.json')]",
            "domainJoinTemplate": "[concat(parameters('baseUri'),'/sharedTemplates/master/domainJoin.json')]",
            "omsAgentTemplate": "[concat(parameters('baseUri'),'/ems-manager/nestedTemplates/omsAgent.json')]"
        }
    },
    "resources": [
        {
            "condition": "[equals(parameters('new_ResourceGroup'), 'Yes')]",
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2018-05-01",
            "location": "[parameters('ResourceGroupLocation')]",
            "name": "[variables('resourcenames').ResourceGroupName]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/deployments",
            "resourcegroup": "[variables('resourcenames').ResourceGroupName]",
            "name": "nsg",
            "apiVersion": "2018-05-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups/', variables('resourcenames').ResourceGroupName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('TemplateURLs').nsgTemplate]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "ResourceGroupLocation": {
                        "value": "[parameters('ResourceGroupLocation')]"
                    },
                    "nsgCount": {
                        "value": "[parameters('nsgCount')]"
                    },
                    "networkSecurityGroupName": {
                        "value": "[variables('resourcenames').networkSecurityGroupName]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "resourcegroup": "[variables('resourcenames').networkSecurityGroupName]",
            "name": "StorageAccount",
            "apiVersion": "2018-05-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups/', variables('resourcenames').networkSecurityGroupName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('TemplateURLs').StorageAccountTemplate]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "ResourceGroupLocation": {
                        "value": "[parameters('ResourceGroupLocation')]"
                    },
                    "strCount": {
                        "value": "[parameters('storageCount')]"
                    },
                    "StorageAccountName": {
                        "value": "[variables('resourcenames').StorageAccountName]"
                    },
                    "StorageAccountType": {
                        "value": "[variables('StorageAccountType')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "resourcegroup": "[variables('resourcenames').ResourceGroupName]",
            "name": "emsManagerVM",
            "apiVersion": "2018-05-01",
            "dependsOn": [
                "StorageAccount"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('templateurls').emsManagerVMTemplate]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmCount": {
                        "value": "[parameters('vmCount')]"
                    },
                    "nicCount": {
                        "value": "[parameters('nicCount')]"
                    },
                    "subnet1Ref": {
                        "value": "[variables('subnet1Ref')]"
                    },
                    "privateIpAddress": {
                        "value": "[parameters('privateIpAddress')]"
                    },
                    "virtualmachineName": {
                        "value": "[variables('resourcenames').virtualmachineName]"
                    },
                    "AvailabilitySet": {
                        "value": "[parameters('AvailabilitySet')]"
                    },
                    "availabilitySetName": {
                        "value": "[variables('resourcenames').availabilitySetName]"
                    },
                    "virtualMachineSize": {
                        "value": "[parameters('virtualMachineSize')]"
                    },
                    "StorageAccountType": {
                        "value": "[variables('StorageAccountType')]"
                    },
                    "networkInterfaceName": {
                        "value": "[variables('resourcenames').networkInterfaceName]"
                    },
                    "osDiskName": {
                        "value": "[variables('resourcenames').osDiskName]"
                    },
                    "dataDiskName": {
                        "value": "[variables('resourcenames').dataDiskName]"
                    },
                    "numberOfDataDisks": {
                        "value": "[parameters('numberOfDataDisks')]"
                    },
                    "DataDiskSize": {
                        "value": "[parameters('DataDiskSize')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "reference": {
                            "keyVault": {
                                "id": "[resourceId(subscription().subscriptionId,  parameters('keyVaultResourceGroupName'), 'Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
                            },
                            "secretName": "[parameters('secret_DomainPassword')]"
                        }
                    },
                    "omsWorkspaceResourceGroup": {
                        "value": "[parameters('omsWorkspaceResourceGroup')]"
                    },
                    "omsWorkspaceName": {
                        "value": "[parameters('omsWorkspaceName')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "domainJoin",
            "apiVersion": "2018-05-01",
            "resourcegroup": "[variables('resourcenames').ResourceGroupName]",
            "dependsOn": [
                "virtualMachine"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('templateurls').domainJoinTemplate]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "ResourceGroupLocation": {
                        "value": "[parameters('ResourceGroupLocation')]"
                    },
                    "vmCount": {
                        "value": "[parameters('vmCount')]"
                    },
                    "virtualmachineName": {
                        "value": "[variables('resourcenames').virtualmachineName]"
                    },
                    "domainName": {
                        "value": "[parameters('domainName')]"
                    },
                    "DomainUserName": {
                        "value": "[parameters('DomainUserName')]"
                    },
                    "DomainPassword": {
                        "reference": {
                            "keyVault": {
                                "id": "[resourceId(subscription().subscriptionId,  parameters('keyVaultResourceGroupName'), 'Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
                            },
                            "secretName": "[parameters('secret_DomainPassword')]"
                        }
                    }
                }
            }
        }
    ]
}
